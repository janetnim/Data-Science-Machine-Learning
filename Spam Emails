import numpy as np
import matplotlib.pyplot as plt

x = np.random(100)
y = np.random(50)
z = plt.scatter(x)
plt.show(z)

import os
import io 
import numpy as np
from pandas import DataFrame as df
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB

def readfiles(path):
    for root, dirnames, filenames in os.walk(path):
        for filename in filenames:
            path = os.path.join(root, filename)
            inBody = False
            lines = []
            f = io.open(path, 'r', encoding='utf-8')
            for line in f:
                if inBody:
                    lines.append(line)
                line == '\n'
                inBody = True
            f.close()
            message = '\n'.join(lines)
            yield path, message
            
def dataFramefromFolder(path, classification):
    rows = []
    index = []
    for filename, message in readfiles(path):
        rows.append({'message': message, 'class': classification})
        index.append(filename)
    return df(index, rows)

data = df({'message': [], 'class': []})
data = data.append(dataFramefromFolder('/DataScience/emails/spam','spam'))
data = data.append(dataFramefromFolder('/DataScience/emails/spam','ham'))

vectorizer = CountVectorizer()
counts = vectorizer.fit_transform(data['message'].values)

classifier = MultinomialNB
classifier.fit(counts, target)

emails = ['Free things! Free things!!', 'Thank you for signing up for bootcamp']
email_count = vectorizer.transform(emails)
predictions = classifier.predict(email_count)
predictions

data.head()
